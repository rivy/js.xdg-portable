'use strict';
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import path from 'path';
import osPaths from 'os-paths';
function baseDir() {
    return osPaths.home() || osPaths.temp();
}
function valOrPath(val, pathSegments) {
    return val || path.join.apply(path, pathSegments);
}
var linux = function () {
    var cache = function () { return valOrPath(process.env.XDG_CACHE_HOME, [baseDir(), '.cache']); };
    var config = function () { return valOrPath(process.env.XDG_CONFIG_HOME, [baseDir(), '.config']); };
    var data = function () { return valOrPath(process.env.XDG_DATA_HOME, [baseDir(), '.local', 'share']); };
    var runtime = function () { return process.env.XDG_RUNTIME_DIR || void 0; };
    var state = function () { return valOrPath(process.env.XDG_STATE_HOME, [baseDir(), '.local', 'state']); };
    return { cache: cache, config: config, data: data, runtime: runtime, state: state };
};
var macos = function () {
    var cache = function () { return valOrPath(process.env.XDG_CACHE_HOME, [baseDir(), 'Library', 'Caches']); };
    var config = function () {
        return valOrPath(process.env.XDG_CONFIG_HOME, [baseDir(), 'Library', 'Preferences']);
    };
    var data = function () {
        return valOrPath(process.env.XDG_DATA_HOME, [baseDir(), 'Library', 'Application Support']);
    };
    var runtime = function () { return process.env.XDG_RUNTIME_DIR || void 0; };
    var state = function () { return valOrPath(process.env.XDG_STATE_HOME, [baseDir(), 'Library', 'State']); };
    return { cache: cache, config: config, data: data, runtime: runtime, state: state };
};
var windows = function () {
    function appData() {
        return valOrPath(process.env.APPDATA, [baseDir(), 'AppData', 'Roaming']);
    }
    function localAppData() {
        return valOrPath(process.env.LOCALAPPDATA, [baseDir(), 'AppData', 'Local']);
    }
    var cache = function () { return valOrPath(process.env.XDG_CACHE_HOME, [localAppData(), 'xdg.cache']); };
    var config = function () { return valOrPath(process.env.XDG_CONFIG_HOME, [appData(), 'xdg.config']); };
    var data = function () { return valOrPath(process.env.XDG_DATA_HOME, [appData(), 'xdg.data']); };
    var runtime = function () { return process.env.XDG_RUNTIME_DIR || void 0; };
    var state = function () { return valOrPath(process.env.XDG_STATE_HOME, [localAppData(), 'xdg.state']); };
    return { cache: cache, config: config, data: data, runtime: runtime, state: state };
};
var XDG_ = (function () {
    function XDG_() {
        function XDG() {
            return new XDG_();
        }
        var isMacOS = /^darwin$/i.test(process.platform);
        var isWinOS = /^win/i.test(process.platform);
        var extension = isMacOS ? macos() : isWinOS ? windows() : linux();
        XDG.cache = extension.cache;
        XDG.config = extension.config;
        XDG.data = extension.data;
        XDG.runtime = extension.runtime;
        XDG.state = extension.state;
        XDG.configDirs = function configDirs() {
            return __spreadArrays([
                extension.config()
            ], (process.env.XDG_CONFIG_DIRS ? process.env.XDG_CONFIG_DIRS.split(path.delimiter) : []));
        };
        XDG.dataDirs = function dataDirs() {
            return __spreadArrays([
                extension.data()
            ], (process.env.XDG_DATA_DIRS ? process.env.XDG_DATA_DIRS.split(path.delimiter) : []));
        };
        return XDG;
    }
    return XDG_;
}());
var default_ = new XDG_();
export default default_;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWERHLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9YREcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsWUFBWSxDQUFDOzs7Ozs7OztBQUViLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUV4QixPQUFPLE9BQU8sTUFBTSxVQUFVLENBQUM7QUEySC9CLFNBQVMsT0FBTztJQUNmLE9BQU8sT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN6QyxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsR0FBdUIsRUFBRSxZQUErQjtJQUMxRSxPQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxPQUFULElBQUksRUFBUyxZQUFZLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRUQsSUFBTSxLQUFLLEdBQUc7SUFDYixJQUFNLEtBQUssR0FBRyxjQUFNLE9BQUEsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsRUFBNUQsQ0FBNEQsQ0FBQztJQUNqRixJQUFNLE1BQU0sR0FBRyxjQUFNLE9BQUEsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUMsRUFBOUQsQ0FBOEQsQ0FBQztJQUNwRixJQUFNLElBQUksR0FBRyxjQUFNLE9BQUEsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQXBFLENBQW9FLENBQUM7SUFDeEYsSUFBTSxPQUFPLEdBQUcsY0FBTSxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxJQUFJLEtBQUssQ0FBQyxFQUFyQyxDQUFxQyxDQUFDO0lBQzVELElBQU0sS0FBSyxHQUFH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