'use strict';
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var path_1 = __importDefault(require("path"));
var os_paths_1 = __importDefault(require("os-paths"));
function baseDir() {
    return os_paths_1["default"].home() || os_paths_1["default"].temp();
}
function valOrPath(val, pathSegments) {
    return val || path_1["default"].join.apply(path_1["default"], pathSegments);
}
var linux = function () {
    var cache = function () { return valOrPath(process.env.XDG_CACHE_HOME, [baseDir(), '.cache']); };
    var config = function () { return valOrPath(process.env.XDG_CONFIG_HOME, [baseDir(), '.config']); };
    var data = function () { return valOrPath(process.env.XDG_DATA_HOME, [baseDir(), '.local', 'share']); };
    var runtime = function () { return process.env.XDG_RUNTIME_DIR || void 0; };
    var state = function () { return valOrPath(process.env.XDG_STATE_HOME, [baseDir(), '.local', 'state']); };
    return { cache: cache, config: config, data: data, runtime: runtime, state: state };
};
var macos = function () {
    var cache = function () { return valOrPath(process.env.XDG_CACHE_HOME, [baseDir(), 'Library', 'Caches']); };
    var config = function () {
        return valOrPath(process.env.XDG_CONFIG_HOME, [baseDir(), 'Library', 'Preferences']);
    };
    var data = function () {
        return valOrPath(process.env.XDG_DATA_HOME, [baseDir(), 'Library', 'Application Support']);
    };
    var runtime = function () { return process.env.XDG_RUNTIME_DIR || void 0; };
    var state = function () { return valOrPath(process.env.XDG_STATE_HOME, [baseDir(), 'Library', 'State']); };
    return { cache: cache, config: config, data: data, runtime: runtime, state: state };
};
var windows = function () {
    function appData() {
        return valOrPath(process.env.APPDATA, [baseDir(), 'AppData', 'Roaming']);
    }
    function localAppData() {
        return valOrPath(process.env.LOCALAPPDATA, [baseDir(), 'AppData', 'Local']);
    }
    var cache = function () { return valOrPath(process.env.XDG_CACHE_HOME, [localAppData(), 'xdg.cache']); };
    var config = function () { return valOrPath(process.env.XDG_CONFIG_HOME, [appData(), 'xdg.config']); };
    var data = function () { return valOrPath(process.env.XDG_DATA_HOME, [appData(), 'xdg.data']); };
    var runtime = function () { return process.env.XDG_RUNTIME_DIR || void 0; };
    var state = function () { return valOrPath(process.env.XDG_STATE_HOME, [localAppData(), 'xdg.state']); };
    return { cache: cache, config: config, data: data, runtime: runtime, state: state };
};
var XDG_ = (function () {
    function XDG_() {
        function XDG() {
            return new XDG_();
        }
        var isMacOS = /^darwin$/i.test(process.platform);
        var isWinOS = /^win/i.test(process.platform);
        var extension = isMacOS ? macos() : isWinOS ? windows() : linux();
        XDG.cache = extension.cache;
        XDG.config = extension.config;
        XDG.data = extension.data;
        XDG.runtime = extension.runtime;
        XDG.state = extension.state;
        XDG.configDirs = function configDirs() {
            return __spreadArrays([
                extension.config()
            ], (process.env.XDG_CONFIG_DIRS ? process.env.XDG_CONFIG_DIRS.split(path_1["default"].delimiter) : []));
        };
        XDG.dataDirs = function dataDirs() {
            return __spreadArrays([
                extension.data()
            ], (process.env.XDG_DATA_DIRS ? process.env.XDG_DATA_DIRS.split(path_1["default"].delimiter) : []));
        };
        return XDG;
    }
    return XDG_;
}());
var default_ = new XDG_();
exports["default"] = default_;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWERHLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9YREcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsWUFBWSxDQUFDOzs7Ozs7Ozs7Ozs7QUFFYiw4Q0FBd0I7QUFFeEIsc0RBQStCO0FBMkgvQixTQUFTLE9BQU87SUFDZixPQUFPLHFCQUFPLENBQUMsSUFBSSxFQUFFLElBQUkscUJBQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN6QyxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsR0FBdUIsRUFBRSxZQUErQjtJQUMxRSxPQUFPLEdBQUcsSUFBSSxpQkFBSSxDQUFDLElBQUksT0FBVCxpQkFBSSxFQUFTLFlBQVksQ0FBQyxDQUFDO0FBQzFDLENBQUM7QUFFRCxJQUFNLEtBQUssR0FBRztJQUNiLElBQU0sS0FBSyxHQUFHLGNBQU0sT0FBQSxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQyxFQUE1RCxDQUE0RCxDQUFDO0lBQ2pGLElBQU0sTUFBTSxHQUFHLGNBQU0sT0FBQSxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQyxFQUE5RCxDQUE4RCxDQUFDO0lBQ3BGLElBQU0sSUFBSSxHQUFHLGNBQU0sT0FBQSxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBcEUsQ0FBb0UsQ0FBQztJQUN4RixJQUFNLE9BQU8sR0FBRyxjQUFNLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLElBQUksS0FBSyxDQUFDLEVBQXJDLENBQXFDLENBQUM7SUFDNUQsSUFBTSxLQUFLLEdBQUcsY0FBTSxPQUFBLFNBQVMsQ0FBQyxPQUFPLENB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